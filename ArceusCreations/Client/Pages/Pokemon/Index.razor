@page "/pokemon"
@attribute [Authorize]
@inject HttpClient http
@inject NavigationManager navigation

<h3>Pokemon</h3>
<button style="background-color: #6f42c1; border-radius: 5px"><a href="/pokemon/create" style="text-decoration: none; color: white">Create a pokemon</a></button>
<hr />
<input type="search" placeholder="Search" @bind-value="searchWord" />
<button @onclick="HandleSearch" style="border-radius: 5px; background-color: #6f42c1; color: white;">Search</button>

@if (_pokemon == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var pokemon in _pokemon)
            {
                <tr>
                    <td><strong>@pokemon.Name</strong></td>
                    <td>
                        <a href=@($"pokemon/{pokemon.Id}") style="text-decoration: none; color:slategray">Details</a>
                        <a href=@($"pokemon/edit/{pokemon.Id}") style="text-decoration: none; color:slategray">Edit</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    private string searchWord;
    private bool stopSearch = false;
    private IEnumerable<PokemonListItem> _pokemon;

    protected override async Task OnInitializedAsync()
    {
        _pokemon = await http.GetFromJsonAsync<List<PokemonListItem>>("/api/pokemon");
    }

    private async void HandleSearch()
    {
        foreach (var pokemon in _pokemon)
        {
            if (searchWord.ToLower() == pokemon.Name.ToLower())
            {
                stopSearch = true;
                navigation.NavigateTo($"/pokemon/{pokemon.Id}");
            }
        }
        if (stopSearch == false)
        {
            navigation.NavigateTo($"/pokemon/{searchWord}");
        }
    }
}

