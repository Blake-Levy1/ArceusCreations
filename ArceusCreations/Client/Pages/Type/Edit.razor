@page "/type/edit/{TypeId:int}"
@attribute [Authorize]
@inject HttpClient http
@inject NavigationManager navigation


<h3>Edit a Type</h3>
@if (errorMessage != null)
{
    <h5 class="text-danger">@errorMessage</h5>
}

<div class="container">
    <EditForm Model="@model" OnValidSubmit="@HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label>Name</label>
            <InputText class="form-control" @bind-Value="model.Name" />
        </div>
        <button type="submit" class="btn btn-primary btn-block mt-5">Submit</button>
    </EditForm>
</div>

@code {
    [Parameter]
    public int TypeId { get; set; }
    private TypeEdit model { get; set; }
    private string errorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        model = await http.GetFromJsonAsync<TypeEdit>($"/api/type/{TypeId}");
    }

    private async void HandleSubmit()
    {
        var createRes = await http.PutAsJsonAsync<TypeEdit>($"/api/type/edit/{TypeId}", model);
        if (createRes.IsSuccessStatusCode)
        {
            navigation.NavigateTo($"/type/{TypeId}");
        }
        else
        {
            errorMessage = "Could not create your type right now. Please try again later";
        }
    }
}



